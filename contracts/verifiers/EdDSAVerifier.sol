// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity >=0.8.0;
pragma experimental ABIEncoderV2;
import {VerifyingKey, Verifier, Proof} from "../libraries/Verifier.sol";
import {Pairing} from "../libraries/Pairing.sol";

contract EdDSAVerifier {
    using Verifier for VerifyingKey;

    VerifyingKey public key;

    function verifyEdDSA(
        uint256 message,
        uint256[2] memory pubkey,
        Proof memory proof
    ) public view returns (bool result) {
        uint256[] memory input = new uint256[](3);
        input[0] = message;
        input[1] = pubkey[0];
        input[2] = pubkey[1];
        return verifyingKey().verify(input, proof);
    }

    function verifyingKey() public pure returns (VerifyingKey memory vk) {
        vk.alpha1 = Pairing.G1Point(
            14549697673896582994404126289361003381086781560505908734743033141008680841536,
            5591067680824400828423549558235796377116502660599589002788239750043844155529
        );
        vk.beta2 = Pairing.G2Point(
            [
                4111984566706852925098834408625279702180214869261736297431831279886529589234,
                8054655829532233345490352829518842255822720000339907425427633781004884019587
            ],
            [
                5438866156109322889401232620924825426783748960139265632758498973158752211680,
                4856469375775769419105931606394981614662756407478553797043655387351177857981
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                7907611226609805332782608013598364730346445078550993693240603051554780241719,
                9125305393634107246017676722560607397825806898387596697894009904246787549172
            ],
            [
                1956563328323044115575163936367676037871598451868662292527517463430771775989,
                9721814177436315146592963849590093481787610734822780439549757110886913851292
            ]
        );
        vk.ic = new Pairing.G1Point[](4);
        vk.ic[0] = Pairing.G1Point(
            18331889548044430063453253923678075028020549567809978978838621338504416518227,
            21251687944007903145854619989844600325808747875114370224634237467621289467950
        );
        vk.ic[1] = Pairing.G1Point(
            15652040155870338505587877295974020451029251763102539757033914906922163356628,
            21637401457648734910908944482441181669299953613547875920805631782798898034420
        );
        vk.ic[2] = Pairing.G1Point(
            9656855546438997404192003126934581618371328735225020706315074993825445974017,
            3125893289653845678951187044790566824208389153072911191896882344705139041007
        );
        vk.ic[3] = Pairing.G1Point(
            12926184034886809985748412818988498753189018197339201977159926347744342147045,
            16613933332098945113501324603489536575262574115714324932325247679645139273954
        );
    }
}
