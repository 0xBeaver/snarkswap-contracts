// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity >=0.8.0;
pragma experimental ABIEncoderV2;

import {VerifyingKey, Verifier, Proof} from "../libraries/Verifier.sol";
import {Pairing} from "../libraries/Pairing.sol";
import {SnarkSwap} from "../interfaces/ISwapVerifier.sol";

contract SwapVerifier {
    using Verifier for VerifyingKey;

    function verifySwap(SnarkSwap memory swap, Proof memory proof)
        public
        view
        returns (bool result)
    {
        uint256[] memory input = new uint256[](15);
        input[0] = swap.sourceA;
        input[1] = swap.sourceB;
        input[2] = uint256(swap.reserve0);
        input[3] = uint256(swap.reserve1);
        input[4] = uint256(swap.mask);
        input[5] = swap.hRatio;
        input[6] = uint256(swap.hReserve0);
        input[7] = uint256(swap.hReserve1);
        input[8] = uint256(swap.ratioSalt);
        input[9] = swap.outputA;
        input[10] = swap.outputB;
        input[11] = uint256(uint160(swap.address0));
        input[12] = uint256(uint160(swap.address0));
        input[13] = uint256(swap.feeNumerator);
        input[14] = uint256(swap.feeDenominator);
        return verifyingKey().verify(input, proof);
    }

    function verifyingKey() public pure returns (VerifyingKey memory vk) {
        vk.alpha1 = Pairing.G1Point(
            14549697673896582994404126289361003381086781560505908734743033141008680841536,
            5591067680824400828423549558235796377116502660599589002788239750043844155529
        );
        vk.beta2 = Pairing.G2Point(
            [
                4111984566706852925098834408625279702180214869261736297431831279886529589234,
                8054655829532233345490352829518842255822720000339907425427633781004884019587
            ],
            [
                5438866156109322889401232620924825426783748960139265632758498973158752211680,
                4856469375775769419105931606394981614662756407478553797043655387351177857981
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                11725427043139262631573153514478047794058708573569963308593575107480400078034,
                17001812353756445667434777512617413533094298582670569674085671012258279855904
            ],
            [
                17384525834561665702907012296178880815885313825594624845166543251553405676220,
                4486446880962567404736321382438817091888899116943580098987280254375382064805
            ]
        );
        vk.ic = new Pairing.G1Point[](16);
        vk.ic[0] = Pairing.G1Point(
            13570907482765159690093666791077983095869797042340793935560918191397683918516,
            13164054843901920021197368080042356485627582917965134477242502341782594458053
        );
        vk.ic[1] = Pairing.G1Point(
            2644944897433389587794780697973949279270089400768099866129527374362138246612,
            2031117926418223877941661884275640620303087623618307525194732455159927345342
        );
        vk.ic[2] = Pairing.G1Point(
            11617798220538741378853585899326257934456203920368651543928207926416088458698,
            21867631376974164584770755036766748833807495562867335132139688089354482286682
        );
        vk.ic[3] = Pairing.G1Point(
            13823611569156235442260619924276616030630916716130538836145851920542038821195,
            12999964330099271633131239463564270164328363058303069234252849393374012116955
        );
        vk.ic[4] = Pairing.G1Point(
            17757838089556559120671269790491576621741926926704511060133946397104059025263,
            13610978171937625533739062667533310356353152263920187767091920838990578089399
        );
        vk.ic[5] = Pairing.G1Point(
            19979872615549721817476648979607624250596946941044543925520488995004052821275,
            3872207803185009679860026599203418738283858187502082002686506785603550197146
        );
        vk.ic[6] = Pairing.G1Point(
            1323331096955691404701419443251291654646232804782452606932383773087618821934,
            19086032277141370726589646704923779905947859417220633212789352125381394142618
        );
        vk.ic[7] = Pairing.G1Point(
            9330580580124256055179865256882949503042673568849091424106031466946923018069,
            4026848283782795621142858049537388997209697333660253103294978321157762017647
        );
        vk.ic[8] = Pairing.G1Point(
            8595284585967482328818836640349282497707172971720616156838215469143905969127,
            10587142299328340087199187938098985405782848159431144810293599917414904952121
        );
        vk.ic[9] = Pairing.G1Point(
            5811062057835989071819201164713266438251192955944930809127679991267880511142,
            8454052226427432371276824506294807838876018718392587830168099800297199580992
        );
        vk.ic[10] = Pairing.G1Point(
            8874328948549175506192166630746236409372767314013024709862479661614770576108,
            18522009605836034609714772295055526333445608809609826575548584638521540725495
        );
        vk.ic[11] = Pairing.G1Point(
            5242758455329953268190062222813749322157422152343059427378419496077180559186,
            11344183348794427841758345871618991708647036379342451961447557574629151774727
        );
        vk.ic[12] = Pairing.G1Point(
            9434794482603254863280287828765768260989599614479527715303593380132855572398,
            16973404881809146691638185362764938633403423338183099406489306837942104801937
        );
        vk.ic[13] = Pairing.G1Point(
            7653451882606770951089001766006888631857475851714042572329467414626127482519,
            16042952063755535551950935242528232562114347685547979445369749459336201021339
        );
        vk.ic[14] = Pairing.G1Point(
            15311299341047149199135026407116322891431241354046307582701986985872528894581,
            17675834603481218766632201248253805766884297677654428815280135397901865582096
        );
        vk.ic[15] = Pairing.G1Point(
            5461713339743062357377984898137143787185121910843031074466571608183407133140,
            21172052891249543924051844549175532426704369354060628765366506802802634967109
        );
    }
}
